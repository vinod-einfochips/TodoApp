name: Android Build and Test

on:
  pull_request:
    branches: [ main, develop, master ]
  push:
    branches: [ main, develop, master ]

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: wrapper

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run Unit Tests
        run: './gradlew :app:testDebugUnitTest'
        continue-on-error: false

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            app/build/reports/tests/
            app/build/test-results/

      - name: Build Debug APK
        run: './gradlew :app:assembleDebug'

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: app-debug-apk
          path: app/build/outputs/apk/debug/*.apk

      - name: Run Lint
        run: './gradlew :app:lintDebug'
        continue-on-error: true

      - name: Upload Lint Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lint-report
          path: app/build/reports/lint*.html

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: app/build/test-results/testDebugUnitTest/*.xml
        continue-on-error: true

      - name: Comment on PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request' && always()
        with:
          script: |
            const fs = require('fs');
            const status = '${{ job.status }}';
            
            const comment = `## ü§ñ Build & Test Results
            
            **Status:** ${status === 'success' ? '‚úÖ Success' : '‚ùå Failed'}
            
            ### Results
            - **Build:** ${status === 'success' ? '‚úÖ Passed' : '‚ùå Failed'}
            - **Unit Tests:** Check artifacts for details
            - **Lint:** Check artifacts for report
            
            ### üì¶ Artifacts
            - Test results available in workflow artifacts
            - Debug APK available for download
            - Lint report available in artifacts
            
            [View Full Workflow Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
